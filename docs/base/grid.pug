-
  const $locale = {
    grid: {
      title: 'Grid',
      desc: [
        'The grid is based on 12 columns system using Flexbox.',
        'add a <code>.row</code> container and as many <code>.column-is_[size]</code> elements as you want',
      ],
      demo: '',
      subSections: [
        {
          title: 'Row width',
          desc: [
            'p the <code>.row</code> always will take 100% of the availables width.'
          ],
          demo: 'row-default'
        },
        {
          title: 'Row spacing',
          desc: [
            'The space bethween rows is based on the vertical rhythm of 8px',
          ],
          demo: 'row-spacing',
          subSections: [
            {
              title: '',
              desc: [
                'you can remove the space between rows adding the modifier <code>.no-margin</code>',
              ],
              demo: 'row-spacing-no_margin',
            },
          ],
        },
        {
          title: 'Row nesting',
          desc: [
            'nesting a new row inside a column will remove the left and right padding',
          ],
          demo: 'row-nesting',
        },
        {
          title: 'Row Orientation',
          desc: [
            'The default behavior of the columns are horizontal, breaking the line if they dont fit the width',
          ],
          demo: 'row-orientation',
          subSections: [
            {
              title: '',
              desc: [
                'you can change the orientarion adding the class <code>.is-column</code>',
              ],
              demo: 'row-is_column',
            },
            {
              title: '',
              desc: [
                'you can change back to the default adding the class <code>.is-row</code>',
              ],
              demo: 'row-is_row',
            },
            {
              title: '',
              desc: [
                'you can prevent the columns to break the line adding the class <code>.no-break</code>',
              ],
              demo: 'row-no_break',
            },
          ],
        },
        {
          title: 'Row alignement',
          subSections: [
            {
              title: 'Vertical',
              desc: [
                '',
              ],
              demo: '',
              subSections: [
                {
                  title: '',
                  desc: [
                    'by default the columns stretch to fill the row',
                  ],
                  demo: 'row-alignement-vertical',
                },
                {
                  title: '',
                  desc: [
                    'Add the class <code>.align-vertical--top</code> to remove the strech and align to top',
                  ],
                  demo: 'row-alignement_vertical-top',
                },
                {
                  title: '',
                  desc: [
                    'Add the class <code>.align-vertical--center</code> to remove the strech and align to center',
                  ],
                  demo: 'row-alignement_vertical-center',
                },
                {
                  title: '',
                  desc: [
                    'Add the class <code>.align-vertical--bottom</code> to remove the strech and align to bottom',
                  ],
                  demo: 'row-alignement_vertical-bottom',
                },
              ],
            },
            {
              title: 'Horizontal',
              desc: [
                '',
              ],
              subSections: [
                {
                  title: '',
                  desc: [
                    'by default the columns are align to left of the row',
                  ],
                  demo: 'row-alignement_horizontal-default',
                },
                {
                  title: '',
                  desc: [
                    'Add the class <code>.align-horizontal--left</code> to align to left',
                  ],
                  demo: 'row-alignement_horizontal-left',
                },
                {
                  title: '',
                  desc: [
                    'Add the class <code>.align-horizontal--center</code> to align to center',
                  ],
                  demo: 'row-alignement_horizontal-center',
                },
                {
                  title: '',
                  desc: [
                    'Add the class <code>.align-horizontal--right</code> to align to right',
                  ],
                  demo: 'row-alignement_horizontal-right',
                },
              ],
            },
          ],
        }
      ],
    },

    column: {
      title: 'Columns',
      desc: [
        'the columns should be nested inside a <code>.row</code>',
      ],
      demo: 'column-default',
      subSections: [
        {
          title: 'Size',
          desc: [
            'to define the size of the column add the size defined by the modifier -is_[SIZE] from 1 to 12',
          ],
          demo: 'column-size',
          subSections: [
            {
              title: '',
              desc: [
                'example all columns sizes',
              ],
              demo: 'column-size-all',
            },
            {
              title: 'More than 12 columns',
              desc: [
                'you can add more columns thank 12 and the space will be equally divided if you use the class without the size modifier, just the class <code>.column</code>',
              ],
              demo: 'column-size-adaptative',
            },
            {
              title: '',
              desc: [
                'if one of the columns have the size modifier, the width will be respected and the remaining space will be divided',
              ],
              demo: 'column-size-fixed-adaptative',
            },
          ],
        },
        {
          title: 'Nested columns',
          desc: [
            'you can nest columns, without padding if you add a .row',
          ],
          demo: 'column-nested',
        },
        {
          title: 'Ordering columns',
          desc: [
            'The columns will follow the order in HTML (all columns have order 1 in flex)',
          ],
          demo: 'column-order-default',
          subSections: [
            {
              title: '',
              desc: [
                'you can change the order using the helper <code>.is_order_[POSITION]</code>',
              ],
              demo: 'column-order-change',
            },
          ],
        },
        {
          title: 'Align column',
          desc: [
            'you can change the column align with the classes column-align-vertical-[POSITION]',
            'by default the columns stretch to fill the height of the column',
          ],
          demo: 'column-align_vertical-default',
          subSections: [
            {
              title: '',
              desc: [
                'Add the class <code>.column-align-vertical--stretch</code> to reset to the default stretch',
              ],
              demo: 'column-align_vertical-stretch',
            },
            {
              title: '',
              desc: [
                'Add the class <code>.column-align-vertical--top</code> to align to top',
              ],
              demo: 'column-align_vertical-top',
            },
            {
              title: '',
              desc: [
                'Add the class <code>.column-align-vertical--center</code> to align to center',
              ],
              demo: 'column-align_vertical-center',
            },
            {
              title: '',
              desc: [
                'Add the class <code>.column-align-vertical--bottom</code> to align to bottom',
              ],
              demo: 'column-align_vertical-bottom',
            },
          ],
        },
        //- offset
      ],
    },

  }

include grid/index.pug

mixin generateDoc($sectionObj, $headingHeight = 0)
  -
    const $headingsSizes = {
      1: 'font_size--xxx-large',
      2: 'font_size--xx-large',
      3: 'font_size--x-large',
      4: 'font_size--large',
    }
    if ($headingHeight < 4) {
      $headingHeight++
    }
    const $titleTag = `h${$headingHeight}`
    const $titleClass = $headingsSizes[$headingHeight]

  section
    if($sectionObj.title !== undefined && $sectionObj.title !== '')
      .row
        .column-is_12
          #{$titleTag}(class=$titleClass)=$sectionObj.title


    if($sectionObj.desc !== undefined && $sectionObj.desc !== '')
      .row
        .column-is_12
          each $desc in $sectionObj.desc
            if($desc !== '')
              p!=$desc


    if($sectionObj.demo !== undefined && $sectionObj.demo !== '')
      .row
        .column-is_12
          .demo-grid
            +includeExample($sectionObj.demo)

    if($sectionObj.subSections !== undefined)
      each $subSections in $sectionObj.subSections
        +generateDoc($subSections, $headingHeight)

//- Generate
+generateDoc($locale.grid)
+generateDoc($locale.column)
